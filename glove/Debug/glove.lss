
glove.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000be  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000aec  2**0
                  ALLOC, LOAD, DATA
  2 .comment      0000002f  00000000  00000000  00000aec  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 0000002a  00000000  00000000  00000b1b  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000140  00000000  00000000  00000b45  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002694  00000000  00000000  00000c85  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008e2  00000000  00000000  00003319  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000dba  00000000  00000000  00003bfb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000002b4  00000000  00000000  000049b8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000299  00000000  00000000  00004c6c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000012e2  00000000  00000000  00004f05  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000100  00000000  00000000  000061e7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  00000a4a  00000a4a  00000ade  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000062e8  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.ADC_voidInit 00000032  00000954  00000954  000009e8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.ADC_voidEnable 00000008  00000a3a  00000a3a  00000ace  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.ADC_voidSetChannel 00000114  000004e8  000004e8  0000057c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.ADC_u16ReadValue 00000010  00000a1e  00000a1e  00000ab2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.__vector_16 0000004e  000008c4  000008c4  00000958  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .bss.ADC_CallBack 00000002  00800060  00800060  00000aec  2**0
                  ALLOC
 20 .text.DIO_voidSetPinDirection 000000ec  000005fc  000005fc  00000690  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.DIO_voidSetPinValue 000000ec  000006e8  000006e8  0000077c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.DIO_voidSetPortDirection 00000024  00000986  00000986  00000a1a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.DIO_voidSetPortValue 00000024  000009aa  000009aa  00000a3e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.LCD_voidWriteChar8bit 00000050  000007d4  000007d4  00000868  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.LCD_voidSendCMD8bit 00000050  00000824  00000824  000008b8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.LCD_voidInit8bit 00000050  00000874  00000874  00000908  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.LCD_voidWriteString 00000042  00000912  00000912  000009a6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.LCD_voidLCDClear 00000008  00000a42  00000a42  00000ad6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.LCD_voidGotoXY 0000001c  000009ec  000009ec  00000a80  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .progmemx.data 00000044  000000be  000000be  00000152  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 31 .text.main    000003e6  00000102  00000102  00000196  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text.libgcc  0000000c  00000a2e  00000a2e  00000ac2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .text.libgcc.mul 0000001e  000009ce  000009ce  00000a62  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .text.__dummy_fini 00000002  00000a52  00000a52  00000ae6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 .text.__dummy_funcs_on_exit 00000002  00000a54  00000a54  00000ae8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 36 .text.__dummy_simulator_exit 00000002  00000a56  00000a56  00000aea  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 37 .text.exit    00000016  00000a08  00000a08  00000a9c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 .text._Exit   00000004  00000a4e  00000a4e  00000ae2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 35 00 	jmp	0x6a	; 0x6a <__ctors_end>
   4:	0c 94 25 05 	jmp	0xa4a	; 0xa4a <__bad_interrupt>
   8:	0c 94 25 05 	jmp	0xa4a	; 0xa4a <__bad_interrupt>
   c:	0c 94 25 05 	jmp	0xa4a	; 0xa4a <__bad_interrupt>
  10:	0c 94 25 05 	jmp	0xa4a	; 0xa4a <__bad_interrupt>
  14:	0c 94 25 05 	jmp	0xa4a	; 0xa4a <__bad_interrupt>
  18:	0c 94 25 05 	jmp	0xa4a	; 0xa4a <__bad_interrupt>
  1c:	0c 94 25 05 	jmp	0xa4a	; 0xa4a <__bad_interrupt>
  20:	0c 94 25 05 	jmp	0xa4a	; 0xa4a <__bad_interrupt>
  24:	0c 94 25 05 	jmp	0xa4a	; 0xa4a <__bad_interrupt>
  28:	0c 94 25 05 	jmp	0xa4a	; 0xa4a <__bad_interrupt>
  2c:	0c 94 25 05 	jmp	0xa4a	; 0xa4a <__bad_interrupt>
  30:	0c 94 25 05 	jmp	0xa4a	; 0xa4a <__bad_interrupt>
  34:	0c 94 25 05 	jmp	0xa4a	; 0xa4a <__bad_interrupt>
  38:	0c 94 25 05 	jmp	0xa4a	; 0xa4a <__bad_interrupt>
  3c:	0c 94 25 05 	jmp	0xa4a	; 0xa4a <__bad_interrupt>
  40:	0c 94 62 04 	jmp	0x8c4	; 0x8c4 <__vector_16>
  44:	0c 94 25 05 	jmp	0xa4a	; 0xa4a <__bad_interrupt>
  48:	0c 94 25 05 	jmp	0xa4a	; 0xa4a <__bad_interrupt>
  4c:	0c 94 25 05 	jmp	0xa4a	; 0xa4a <__bad_interrupt>
  50:	0c 94 25 05 	jmp	0xa4a	; 0xa4a <__bad_interrupt>
  54:	7e 02       	muls	r23, r30
  56:	8e 02       	muls	r24, r30
  58:	9e 02       	muls	r25, r30
  5a:	ae 02       	muls	r26, r30
  5c:	be 02       	muls	r27, r30
  5e:	ce 02       	muls	r28, r30
  60:	de 02       	muls	r29, r30
  62:	ee 02       	muls	r30, r30

00000064 <.dinit>:
  64:	00 60       	ori	r16, 0x00	; 0
  66:	00 62       	ori	r16, 0x20	; 32
  68:	80 00       	.word	0x0080	; ????

0000006a <__ctors_end>:
  6a:	11 24       	eor	r1, r1
  6c:	1f be       	out	0x3f, r1	; 63
  6e:	cf e5       	ldi	r28, 0x5F	; 95
  70:	d8 e0       	ldi	r29, 0x08	; 8
  72:	de bf       	out	0x3e, r29	; 62
  74:	cd bf       	out	0x3d, r28	; 61

00000076 <__do_copy_data>:
  76:	e4 e6       	ldi	r30, 0x64	; 100
  78:	f0 e0       	ldi	r31, 0x00	; 0
  7a:	40 e0       	ldi	r20, 0x00	; 0
  7c:	17 c0       	rjmp	.+46     	; 0xac <__do_clear_bss+0x8>
  7e:	b5 91       	lpm	r27, Z+
  80:	a5 91       	lpm	r26, Z+
  82:	35 91       	lpm	r19, Z+
  84:	25 91       	lpm	r18, Z+
  86:	05 91       	lpm	r16, Z+
  88:	07 fd       	sbrc	r16, 7
  8a:	0c c0       	rjmp	.+24     	; 0xa4 <__do_clear_bss>
  8c:	95 91       	lpm	r25, Z+
  8e:	85 91       	lpm	r24, Z+
  90:	ef 01       	movw	r28, r30
  92:	f9 2f       	mov	r31, r25
  94:	e8 2f       	mov	r30, r24
  96:	05 90       	lpm	r0, Z+
  98:	0d 92       	st	X+, r0
  9a:	a2 17       	cp	r26, r18
  9c:	b3 07       	cpc	r27, r19
  9e:	d9 f7       	brne	.-10     	; 0x96 <__do_copy_data+0x20>
  a0:	fe 01       	movw	r30, r28
  a2:	04 c0       	rjmp	.+8      	; 0xac <__do_clear_bss+0x8>

000000a4 <__do_clear_bss>:
  a4:	1d 92       	st	X+, r1
  a6:	a2 17       	cp	r26, r18
  a8:	b3 07       	cpc	r27, r19
  aa:	e1 f7       	brne	.-8      	; 0xa4 <__do_clear_bss>
  ac:	e9 36       	cpi	r30, 0x69	; 105
  ae:	f4 07       	cpc	r31, r20
  b0:	31 f7       	brne	.-52     	; 0x7e <__do_copy_data+0x8>
  b2:	0e 94 81 00 	call	0x102	; 0x102 <main>
  b6:	0c 94 04 05 	jmp	0xa08	; 0xa08 <exit>

000000ba <_exit>:
  ba:	f8 94       	cli

000000bc <__stop_program>:
  bc:	ff cf       	rjmp	.-2      	; 0xbc <__stop_program>

Disassembly of section .text:

00000a4a <__bad_interrupt>:
 a4a:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.ADC_voidInit:

00000954 <ADC_voidInit>:
 954:	87 b1       	in	r24, 0x07	; 7
 956:	80 64       	ori	r24, 0x40	; 64
 958:	87 b9       	out	0x07, r24	; 7
 95a:	87 b1       	in	r24, 0x07	; 7
 95c:	8f 77       	andi	r24, 0x7F	; 127
 95e:	87 b9       	out	0x07, r24	; 7
 960:	86 b1       	in	r24, 0x06	; 6
 962:	81 60       	ori	r24, 0x01	; 1
 964:	86 b9       	out	0x06, r24	; 6
 966:	86 b1       	in	r24, 0x06	; 6
 968:	82 60       	ori	r24, 0x02	; 2
 96a:	86 b9       	out	0x06, r24	; 6
 96c:	86 b1       	in	r24, 0x06	; 6
 96e:	84 60       	ori	r24, 0x04	; 4
 970:	86 b9       	out	0x06, r24	; 6
 972:	86 b1       	in	r24, 0x06	; 6
 974:	8f 77       	andi	r24, 0x7F	; 127
 976:	86 b9       	out	0x06, r24	; 6
 978:	86 b1       	in	r24, 0x06	; 6
 97a:	87 7f       	andi	r24, 0xF7	; 247
 97c:	86 b9       	out	0x06, r24	; 6
 97e:	86 b1       	in	r24, 0x06	; 6
 980:	80 61       	ori	r24, 0x10	; 16
 982:	86 b9       	out	0x06, r24	; 6
 984:	08 95       	ret

Disassembly of section .text.ADC_voidEnable:

00000a3a <ADC_voidEnable>:
 a3a:	86 b1       	in	r24, 0x06	; 6
 a3c:	80 68       	ori	r24, 0x80	; 128
 a3e:	86 b9       	out	0x06, r24	; 6
 a40:	08 95       	ret

Disassembly of section .text.ADC_voidSetChannel:

000004e8 <ADC_voidSetChannel>:
 4e8:	90 e0       	ldi	r25, 0x00	; 0
 4ea:	88 30       	cpi	r24, 0x08	; 8
 4ec:	91 05       	cpc	r25, r1
 4ee:	08 f0       	brcs	.+2      	; 0x4f2 <ADC_voidSetChannel+0xa>
 4f0:	84 c0       	rjmp	.+264    	; 0x5fa <ADC_voidSetChannel+0x112>
 4f2:	fc 01       	movw	r30, r24
 4f4:	e6 5d       	subi	r30, 0xD6	; 214
 4f6:	ff 4f       	sbci	r31, 0xFF	; 255
 4f8:	0c 94 17 05 	jmp	0xa2e	; 0xa2e <__tablejump2__>
 4fc:	87 b1       	in	r24, 0x07	; 7
 4fe:	8e 7f       	andi	r24, 0xFE	; 254
 500:	87 b9       	out	0x07, r24	; 7
 502:	87 b1       	in	r24, 0x07	; 7
 504:	8d 7f       	andi	r24, 0xFD	; 253
 506:	87 b9       	out	0x07, r24	; 7
 508:	87 b1       	in	r24, 0x07	; 7
 50a:	8b 7f       	andi	r24, 0xFB	; 251
 50c:	87 b9       	out	0x07, r24	; 7
 50e:	87 b1       	in	r24, 0x07	; 7
 510:	87 7f       	andi	r24, 0xF7	; 247
 512:	87 b9       	out	0x07, r24	; 7
 514:	87 b1       	in	r24, 0x07	; 7
 516:	8f 7e       	andi	r24, 0xEF	; 239
 518:	87 b9       	out	0x07, r24	; 7
 51a:	08 95       	ret
 51c:	87 b1       	in	r24, 0x07	; 7
 51e:	81 60       	ori	r24, 0x01	; 1
 520:	87 b9       	out	0x07, r24	; 7
 522:	87 b1       	in	r24, 0x07	; 7
 524:	8d 7f       	andi	r24, 0xFD	; 253
 526:	87 b9       	out	0x07, r24	; 7
 528:	87 b1       	in	r24, 0x07	; 7
 52a:	8b 7f       	andi	r24, 0xFB	; 251
 52c:	87 b9       	out	0x07, r24	; 7
 52e:	87 b1       	in	r24, 0x07	; 7
 530:	87 7f       	andi	r24, 0xF7	; 247
 532:	87 b9       	out	0x07, r24	; 7
 534:	87 b1       	in	r24, 0x07	; 7
 536:	8f 7e       	andi	r24, 0xEF	; 239
 538:	87 b9       	out	0x07, r24	; 7
 53a:	08 95       	ret
 53c:	87 b1       	in	r24, 0x07	; 7
 53e:	8e 7f       	andi	r24, 0xFE	; 254
 540:	87 b9       	out	0x07, r24	; 7
 542:	87 b1       	in	r24, 0x07	; 7
 544:	82 60       	ori	r24, 0x02	; 2
 546:	87 b9       	out	0x07, r24	; 7
 548:	87 b1       	in	r24, 0x07	; 7
 54a:	8b 7f       	andi	r24, 0xFB	; 251
 54c:	87 b9       	out	0x07, r24	; 7
 54e:	87 b1       	in	r24, 0x07	; 7
 550:	87 7f       	andi	r24, 0xF7	; 247
 552:	87 b9       	out	0x07, r24	; 7
 554:	87 b1       	in	r24, 0x07	; 7
 556:	8f 7e       	andi	r24, 0xEF	; 239
 558:	87 b9       	out	0x07, r24	; 7
 55a:	08 95       	ret
 55c:	87 b1       	in	r24, 0x07	; 7
 55e:	81 60       	ori	r24, 0x01	; 1
 560:	87 b9       	out	0x07, r24	; 7
 562:	87 b1       	in	r24, 0x07	; 7
 564:	82 60       	ori	r24, 0x02	; 2
 566:	87 b9       	out	0x07, r24	; 7
 568:	87 b1       	in	r24, 0x07	; 7
 56a:	8b 7f       	andi	r24, 0xFB	; 251
 56c:	87 b9       	out	0x07, r24	; 7
 56e:	87 b1       	in	r24, 0x07	; 7
 570:	87 7f       	andi	r24, 0xF7	; 247
 572:	87 b9       	out	0x07, r24	; 7
 574:	87 b1       	in	r24, 0x07	; 7
 576:	8f 7e       	andi	r24, 0xEF	; 239
 578:	87 b9       	out	0x07, r24	; 7
 57a:	08 95       	ret
 57c:	87 b1       	in	r24, 0x07	; 7
 57e:	8e 7f       	andi	r24, 0xFE	; 254
 580:	87 b9       	out	0x07, r24	; 7
 582:	87 b1       	in	r24, 0x07	; 7
 584:	8d 7f       	andi	r24, 0xFD	; 253
 586:	87 b9       	out	0x07, r24	; 7
 588:	87 b1       	in	r24, 0x07	; 7
 58a:	84 60       	ori	r24, 0x04	; 4
 58c:	87 b9       	out	0x07, r24	; 7
 58e:	87 b1       	in	r24, 0x07	; 7
 590:	87 7f       	andi	r24, 0xF7	; 247
 592:	87 b9       	out	0x07, r24	; 7
 594:	87 b1       	in	r24, 0x07	; 7
 596:	8f 7e       	andi	r24, 0xEF	; 239
 598:	87 b9       	out	0x07, r24	; 7
 59a:	08 95       	ret
 59c:	87 b1       	in	r24, 0x07	; 7
 59e:	81 60       	ori	r24, 0x01	; 1
 5a0:	87 b9       	out	0x07, r24	; 7
 5a2:	87 b1       	in	r24, 0x07	; 7
 5a4:	8d 7f       	andi	r24, 0xFD	; 253
 5a6:	87 b9       	out	0x07, r24	; 7
 5a8:	87 b1       	in	r24, 0x07	; 7
 5aa:	84 60       	ori	r24, 0x04	; 4
 5ac:	87 b9       	out	0x07, r24	; 7
 5ae:	87 b1       	in	r24, 0x07	; 7
 5b0:	87 7f       	andi	r24, 0xF7	; 247
 5b2:	87 b9       	out	0x07, r24	; 7
 5b4:	87 b1       	in	r24, 0x07	; 7
 5b6:	8f 7e       	andi	r24, 0xEF	; 239
 5b8:	87 b9       	out	0x07, r24	; 7
 5ba:	08 95       	ret
 5bc:	87 b1       	in	r24, 0x07	; 7
 5be:	8e 7f       	andi	r24, 0xFE	; 254
 5c0:	87 b9       	out	0x07, r24	; 7
 5c2:	87 b1       	in	r24, 0x07	; 7
 5c4:	82 60       	ori	r24, 0x02	; 2
 5c6:	87 b9       	out	0x07, r24	; 7
 5c8:	87 b1       	in	r24, 0x07	; 7
 5ca:	84 60       	ori	r24, 0x04	; 4
 5cc:	87 b9       	out	0x07, r24	; 7
 5ce:	87 b1       	in	r24, 0x07	; 7
 5d0:	87 7f       	andi	r24, 0xF7	; 247
 5d2:	87 b9       	out	0x07, r24	; 7
 5d4:	87 b1       	in	r24, 0x07	; 7
 5d6:	8f 7e       	andi	r24, 0xEF	; 239
 5d8:	87 b9       	out	0x07, r24	; 7
 5da:	08 95       	ret
 5dc:	87 b1       	in	r24, 0x07	; 7
 5de:	81 60       	ori	r24, 0x01	; 1
 5e0:	87 b9       	out	0x07, r24	; 7
 5e2:	87 b1       	in	r24, 0x07	; 7
 5e4:	82 60       	ori	r24, 0x02	; 2
 5e6:	87 b9       	out	0x07, r24	; 7
 5e8:	87 b1       	in	r24, 0x07	; 7
 5ea:	84 60       	ori	r24, 0x04	; 4
 5ec:	87 b9       	out	0x07, r24	; 7
 5ee:	87 b1       	in	r24, 0x07	; 7
 5f0:	87 7f       	andi	r24, 0xF7	; 247
 5f2:	87 b9       	out	0x07, r24	; 7
 5f4:	87 b1       	in	r24, 0x07	; 7
 5f6:	8f 7e       	andi	r24, 0xEF	; 239
 5f8:	87 b9       	out	0x07, r24	; 7
 5fa:	08 95       	ret

Disassembly of section .text.ADC_u16ReadValue:

00000a1e <ADC_u16ReadValue>:
 a1e:	86 b1       	in	r24, 0x06	; 6
 a20:	80 64       	ori	r24, 0x40	; 64
 a22:	86 b9       	out	0x06, r24	; 6
 a24:	34 9b       	sbis	0x06, 4	; 6
 a26:	fe cf       	rjmp	.-4      	; 0xa24 <ADC_u16ReadValue+0x6>
 a28:	84 b1       	in	r24, 0x04	; 4
 a2a:	95 b1       	in	r25, 0x05	; 5
 a2c:	08 95       	ret

Disassembly of section .text.__vector_16:

000008c4 <__vector_16>:
 8c4:	1f 92       	push	r1
 8c6:	0f 92       	push	r0
 8c8:	0f b6       	in	r0, 0x3f	; 63
 8ca:	0f 92       	push	r0
 8cc:	11 24       	eor	r1, r1
 8ce:	2f 93       	push	r18
 8d0:	3f 93       	push	r19
 8d2:	4f 93       	push	r20
 8d4:	5f 93       	push	r21
 8d6:	6f 93       	push	r22
 8d8:	7f 93       	push	r23
 8da:	8f 93       	push	r24
 8dc:	9f 93       	push	r25
 8de:	af 93       	push	r26
 8e0:	bf 93       	push	r27
 8e2:	ef 93       	push	r30
 8e4:	ff 93       	push	r31
 8e6:	e0 91 60 00 	lds	r30, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 8ea:	f0 91 61 00 	lds	r31, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 8ee:	09 95       	icall
 8f0:	ff 91       	pop	r31
 8f2:	ef 91       	pop	r30
 8f4:	bf 91       	pop	r27
 8f6:	af 91       	pop	r26
 8f8:	9f 91       	pop	r25
 8fa:	8f 91       	pop	r24
 8fc:	7f 91       	pop	r23
 8fe:	6f 91       	pop	r22
 900:	5f 91       	pop	r21
 902:	4f 91       	pop	r20
 904:	3f 91       	pop	r19
 906:	2f 91       	pop	r18
 908:	0f 90       	pop	r0
 90a:	0f be       	out	0x3f, r0	; 63
 90c:	0f 90       	pop	r0
 90e:	1f 90       	pop	r1
 910:	18 95       	reti

Disassembly of section .text.DIO_voidSetPinDirection:

000005fc <DIO_voidSetPinDirection>:
 5fc:	84 30       	cpi	r24, 0x04	; 4
 5fe:	08 f0       	brcs	.+2      	; 0x602 <DIO_voidSetPinDirection+0x6>
 600:	72 c0       	rjmp	.+228    	; 0x6e6 <DIO_voidSetPinDirection+0xea>
 602:	68 30       	cpi	r22, 0x08	; 8
 604:	08 f0       	brcs	.+2      	; 0x608 <DIO_voidSetPinDirection+0xc>
 606:	6f c0       	rjmp	.+222    	; 0x6e6 <DIO_voidSetPinDirection+0xea>
 608:	41 30       	cpi	r20, 0x01	; 1
 60a:	a1 f5       	brne	.+104    	; 0x674 <DIO_voidSetPinDirection+0x78>
 60c:	81 30       	cpi	r24, 0x01	; 1
 60e:	89 f0       	breq	.+34     	; 0x632 <DIO_voidSetPinDirection+0x36>
 610:	28 f0       	brcs	.+10     	; 0x61c <DIO_voidSetPinDirection+0x20>
 612:	82 30       	cpi	r24, 0x02	; 2
 614:	c9 f0       	breq	.+50     	; 0x648 <DIO_voidSetPinDirection+0x4c>
 616:	83 30       	cpi	r24, 0x03	; 3
 618:	11 f1       	breq	.+68     	; 0x65e <DIO_voidSetPinDirection+0x62>
 61a:	08 95       	ret
 61c:	2a b3       	in	r18, 0x1a	; 26
 61e:	81 e0       	ldi	r24, 0x01	; 1
 620:	90 e0       	ldi	r25, 0x00	; 0
 622:	02 c0       	rjmp	.+4      	; 0x628 <DIO_voidSetPinDirection+0x2c>
 624:	88 0f       	add	r24, r24
 626:	99 1f       	adc	r25, r25
 628:	6a 95       	dec	r22
 62a:	e2 f7       	brpl	.-8      	; 0x624 <DIO_voidSetPinDirection+0x28>
 62c:	82 2b       	or	r24, r18
 62e:	8a bb       	out	0x1a, r24	; 26
 630:	08 95       	ret
 632:	27 b3       	in	r18, 0x17	; 23
 634:	81 e0       	ldi	r24, 0x01	; 1
 636:	90 e0       	ldi	r25, 0x00	; 0
 638:	02 c0       	rjmp	.+4      	; 0x63e <DIO_voidSetPinDirection+0x42>
 63a:	88 0f       	add	r24, r24
 63c:	99 1f       	adc	r25, r25
 63e:	6a 95       	dec	r22
 640:	e2 f7       	brpl	.-8      	; 0x63a <DIO_voidSetPinDirection+0x3e>
 642:	82 2b       	or	r24, r18
 644:	87 bb       	out	0x17, r24	; 23
 646:	08 95       	ret
 648:	24 b3       	in	r18, 0x14	; 20
 64a:	81 e0       	ldi	r24, 0x01	; 1
 64c:	90 e0       	ldi	r25, 0x00	; 0
 64e:	02 c0       	rjmp	.+4      	; 0x654 <DIO_voidSetPinDirection+0x58>
 650:	88 0f       	add	r24, r24
 652:	99 1f       	adc	r25, r25
 654:	6a 95       	dec	r22
 656:	e2 f7       	brpl	.-8      	; 0x650 <DIO_voidSetPinDirection+0x54>
 658:	82 2b       	or	r24, r18
 65a:	84 bb       	out	0x14, r24	; 20
 65c:	08 95       	ret
 65e:	21 b3       	in	r18, 0x11	; 17
 660:	81 e0       	ldi	r24, 0x01	; 1
 662:	90 e0       	ldi	r25, 0x00	; 0
 664:	02 c0       	rjmp	.+4      	; 0x66a <DIO_voidSetPinDirection+0x6e>
 666:	88 0f       	add	r24, r24
 668:	99 1f       	adc	r25, r25
 66a:	6a 95       	dec	r22
 66c:	e2 f7       	brpl	.-8      	; 0x666 <DIO_voidSetPinDirection+0x6a>
 66e:	82 2b       	or	r24, r18
 670:	81 bb       	out	0x11, r24	; 17
 672:	08 95       	ret
 674:	41 11       	cpse	r20, r1
 676:	37 c0       	rjmp	.+110    	; 0x6e6 <DIO_voidSetPinDirection+0xea>
 678:	81 30       	cpi	r24, 0x01	; 1
 67a:	91 f0       	breq	.+36     	; 0x6a0 <DIO_voidSetPinDirection+0xa4>
 67c:	28 f0       	brcs	.+10     	; 0x688 <DIO_voidSetPinDirection+0x8c>
 67e:	82 30       	cpi	r24, 0x02	; 2
 680:	d9 f0       	breq	.+54     	; 0x6b8 <DIO_voidSetPinDirection+0xbc>
 682:	83 30       	cpi	r24, 0x03	; 3
 684:	29 f1       	breq	.+74     	; 0x6d0 <DIO_voidSetPinDirection+0xd4>
 686:	08 95       	ret
 688:	2a b3       	in	r18, 0x1a	; 26
 68a:	81 e0       	ldi	r24, 0x01	; 1
 68c:	90 e0       	ldi	r25, 0x00	; 0
 68e:	02 c0       	rjmp	.+4      	; 0x694 <DIO_voidSetPinDirection+0x98>
 690:	88 0f       	add	r24, r24
 692:	99 1f       	adc	r25, r25
 694:	6a 95       	dec	r22
 696:	e2 f7       	brpl	.-8      	; 0x690 <DIO_voidSetPinDirection+0x94>
 698:	80 95       	com	r24
 69a:	82 23       	and	r24, r18
 69c:	8a bb       	out	0x1a, r24	; 26
 69e:	08 95       	ret
 6a0:	27 b3       	in	r18, 0x17	; 23
 6a2:	81 e0       	ldi	r24, 0x01	; 1
 6a4:	90 e0       	ldi	r25, 0x00	; 0
 6a6:	02 c0       	rjmp	.+4      	; 0x6ac <DIO_voidSetPinDirection+0xb0>
 6a8:	88 0f       	add	r24, r24
 6aa:	99 1f       	adc	r25, r25
 6ac:	6a 95       	dec	r22
 6ae:	e2 f7       	brpl	.-8      	; 0x6a8 <DIO_voidSetPinDirection+0xac>
 6b0:	80 95       	com	r24
 6b2:	82 23       	and	r24, r18
 6b4:	87 bb       	out	0x17, r24	; 23
 6b6:	08 95       	ret
 6b8:	24 b3       	in	r18, 0x14	; 20
 6ba:	81 e0       	ldi	r24, 0x01	; 1
 6bc:	90 e0       	ldi	r25, 0x00	; 0
 6be:	02 c0       	rjmp	.+4      	; 0x6c4 <DIO_voidSetPinDirection+0xc8>
 6c0:	88 0f       	add	r24, r24
 6c2:	99 1f       	adc	r25, r25
 6c4:	6a 95       	dec	r22
 6c6:	e2 f7       	brpl	.-8      	; 0x6c0 <DIO_voidSetPinDirection+0xc4>
 6c8:	80 95       	com	r24
 6ca:	82 23       	and	r24, r18
 6cc:	84 bb       	out	0x14, r24	; 20
 6ce:	08 95       	ret
 6d0:	21 b3       	in	r18, 0x11	; 17
 6d2:	81 e0       	ldi	r24, 0x01	; 1
 6d4:	90 e0       	ldi	r25, 0x00	; 0
 6d6:	02 c0       	rjmp	.+4      	; 0x6dc <DIO_voidSetPinDirection+0xe0>
 6d8:	88 0f       	add	r24, r24
 6da:	99 1f       	adc	r25, r25
 6dc:	6a 95       	dec	r22
 6de:	e2 f7       	brpl	.-8      	; 0x6d8 <DIO_voidSetPinDirection+0xdc>
 6e0:	80 95       	com	r24
 6e2:	82 23       	and	r24, r18
 6e4:	81 bb       	out	0x11, r24	; 17
 6e6:	08 95       	ret

Disassembly of section .text.DIO_voidSetPinValue:

000006e8 <DIO_voidSetPinValue>:
 6e8:	84 30       	cpi	r24, 0x04	; 4
 6ea:	08 f0       	brcs	.+2      	; 0x6ee <DIO_voidSetPinValue+0x6>
 6ec:	72 c0       	rjmp	.+228    	; 0x7d2 <DIO_voidSetPinValue+0xea>
 6ee:	68 30       	cpi	r22, 0x08	; 8
 6f0:	08 f0       	brcs	.+2      	; 0x6f4 <DIO_voidSetPinValue+0xc>
 6f2:	6f c0       	rjmp	.+222    	; 0x7d2 <DIO_voidSetPinValue+0xea>
 6f4:	41 30       	cpi	r20, 0x01	; 1
 6f6:	a1 f5       	brne	.+104    	; 0x760 <DIO_voidSetPinValue+0x78>
 6f8:	81 30       	cpi	r24, 0x01	; 1
 6fa:	89 f0       	breq	.+34     	; 0x71e <DIO_voidSetPinValue+0x36>
 6fc:	28 f0       	brcs	.+10     	; 0x708 <DIO_voidSetPinValue+0x20>
 6fe:	82 30       	cpi	r24, 0x02	; 2
 700:	c9 f0       	breq	.+50     	; 0x734 <DIO_voidSetPinValue+0x4c>
 702:	83 30       	cpi	r24, 0x03	; 3
 704:	11 f1       	breq	.+68     	; 0x74a <DIO_voidSetPinValue+0x62>
 706:	08 95       	ret
 708:	2b b3       	in	r18, 0x1b	; 27
 70a:	81 e0       	ldi	r24, 0x01	; 1
 70c:	90 e0       	ldi	r25, 0x00	; 0
 70e:	02 c0       	rjmp	.+4      	; 0x714 <DIO_voidSetPinValue+0x2c>
 710:	88 0f       	add	r24, r24
 712:	99 1f       	adc	r25, r25
 714:	6a 95       	dec	r22
 716:	e2 f7       	brpl	.-8      	; 0x710 <DIO_voidSetPinValue+0x28>
 718:	82 2b       	or	r24, r18
 71a:	8b bb       	out	0x1b, r24	; 27
 71c:	08 95       	ret
 71e:	28 b3       	in	r18, 0x18	; 24
 720:	81 e0       	ldi	r24, 0x01	; 1
 722:	90 e0       	ldi	r25, 0x00	; 0
 724:	02 c0       	rjmp	.+4      	; 0x72a <DIO_voidSetPinValue+0x42>
 726:	88 0f       	add	r24, r24
 728:	99 1f       	adc	r25, r25
 72a:	6a 95       	dec	r22
 72c:	e2 f7       	brpl	.-8      	; 0x726 <DIO_voidSetPinValue+0x3e>
 72e:	82 2b       	or	r24, r18
 730:	88 bb       	out	0x18, r24	; 24
 732:	08 95       	ret
 734:	25 b3       	in	r18, 0x15	; 21
 736:	81 e0       	ldi	r24, 0x01	; 1
 738:	90 e0       	ldi	r25, 0x00	; 0
 73a:	02 c0       	rjmp	.+4      	; 0x740 <DIO_voidSetPinValue+0x58>
 73c:	88 0f       	add	r24, r24
 73e:	99 1f       	adc	r25, r25
 740:	6a 95       	dec	r22
 742:	e2 f7       	brpl	.-8      	; 0x73c <DIO_voidSetPinValue+0x54>
 744:	82 2b       	or	r24, r18
 746:	85 bb       	out	0x15, r24	; 21
 748:	08 95       	ret
 74a:	22 b3       	in	r18, 0x12	; 18
 74c:	81 e0       	ldi	r24, 0x01	; 1
 74e:	90 e0       	ldi	r25, 0x00	; 0
 750:	02 c0       	rjmp	.+4      	; 0x756 <DIO_voidSetPinValue+0x6e>
 752:	88 0f       	add	r24, r24
 754:	99 1f       	adc	r25, r25
 756:	6a 95       	dec	r22
 758:	e2 f7       	brpl	.-8      	; 0x752 <DIO_voidSetPinValue+0x6a>
 75a:	82 2b       	or	r24, r18
 75c:	82 bb       	out	0x12, r24	; 18
 75e:	08 95       	ret
 760:	41 11       	cpse	r20, r1
 762:	37 c0       	rjmp	.+110    	; 0x7d2 <DIO_voidSetPinValue+0xea>
 764:	81 30       	cpi	r24, 0x01	; 1
 766:	91 f0       	breq	.+36     	; 0x78c <DIO_voidSetPinValue+0xa4>
 768:	28 f0       	brcs	.+10     	; 0x774 <DIO_voidSetPinValue+0x8c>
 76a:	82 30       	cpi	r24, 0x02	; 2
 76c:	d9 f0       	breq	.+54     	; 0x7a4 <DIO_voidSetPinValue+0xbc>
 76e:	83 30       	cpi	r24, 0x03	; 3
 770:	29 f1       	breq	.+74     	; 0x7bc <DIO_voidSetPinValue+0xd4>
 772:	08 95       	ret
 774:	2b b3       	in	r18, 0x1b	; 27
 776:	81 e0       	ldi	r24, 0x01	; 1
 778:	90 e0       	ldi	r25, 0x00	; 0
 77a:	02 c0       	rjmp	.+4      	; 0x780 <DIO_voidSetPinValue+0x98>
 77c:	88 0f       	add	r24, r24
 77e:	99 1f       	adc	r25, r25
 780:	6a 95       	dec	r22
 782:	e2 f7       	brpl	.-8      	; 0x77c <DIO_voidSetPinValue+0x94>
 784:	80 95       	com	r24
 786:	82 23       	and	r24, r18
 788:	8b bb       	out	0x1b, r24	; 27
 78a:	08 95       	ret
 78c:	28 b3       	in	r18, 0x18	; 24
 78e:	81 e0       	ldi	r24, 0x01	; 1
 790:	90 e0       	ldi	r25, 0x00	; 0
 792:	02 c0       	rjmp	.+4      	; 0x798 <DIO_voidSetPinValue+0xb0>
 794:	88 0f       	add	r24, r24
 796:	99 1f       	adc	r25, r25
 798:	6a 95       	dec	r22
 79a:	e2 f7       	brpl	.-8      	; 0x794 <DIO_voidSetPinValue+0xac>
 79c:	80 95       	com	r24
 79e:	82 23       	and	r24, r18
 7a0:	88 bb       	out	0x18, r24	; 24
 7a2:	08 95       	ret
 7a4:	25 b3       	in	r18, 0x15	; 21
 7a6:	81 e0       	ldi	r24, 0x01	; 1
 7a8:	90 e0       	ldi	r25, 0x00	; 0
 7aa:	02 c0       	rjmp	.+4      	; 0x7b0 <DIO_voidSetPinValue+0xc8>
 7ac:	88 0f       	add	r24, r24
 7ae:	99 1f       	adc	r25, r25
 7b0:	6a 95       	dec	r22
 7b2:	e2 f7       	brpl	.-8      	; 0x7ac <DIO_voidSetPinValue+0xc4>
 7b4:	80 95       	com	r24
 7b6:	82 23       	and	r24, r18
 7b8:	85 bb       	out	0x15, r24	; 21
 7ba:	08 95       	ret
 7bc:	22 b3       	in	r18, 0x12	; 18
 7be:	81 e0       	ldi	r24, 0x01	; 1
 7c0:	90 e0       	ldi	r25, 0x00	; 0
 7c2:	02 c0       	rjmp	.+4      	; 0x7c8 <DIO_voidSetPinValue+0xe0>
 7c4:	88 0f       	add	r24, r24
 7c6:	99 1f       	adc	r25, r25
 7c8:	6a 95       	dec	r22
 7ca:	e2 f7       	brpl	.-8      	; 0x7c4 <DIO_voidSetPinValue+0xdc>
 7cc:	80 95       	com	r24
 7ce:	82 23       	and	r24, r18
 7d0:	82 bb       	out	0x12, r24	; 18
 7d2:	08 95       	ret

Disassembly of section .text.DIO_voidSetPortDirection:

00000986 <DIO_voidSetPortDirection>:
 986:	84 30       	cpi	r24, 0x04	; 4
 988:	78 f4       	brcc	.+30     	; 0x9a8 <DIO_voidSetPortDirection+0x22>
 98a:	81 30       	cpi	r24, 0x01	; 1
 98c:	41 f0       	breq	.+16     	; 0x99e <DIO_voidSetPortDirection+0x18>
 98e:	28 f0       	brcs	.+10     	; 0x99a <DIO_voidSetPortDirection+0x14>
 990:	82 30       	cpi	r24, 0x02	; 2
 992:	39 f0       	breq	.+14     	; 0x9a2 <DIO_voidSetPortDirection+0x1c>
 994:	83 30       	cpi	r24, 0x03	; 3
 996:	39 f0       	breq	.+14     	; 0x9a6 <DIO_voidSetPortDirection+0x20>
 998:	08 95       	ret
 99a:	6a bb       	out	0x1a, r22	; 26
 99c:	08 95       	ret
 99e:	67 bb       	out	0x17, r22	; 23
 9a0:	08 95       	ret
 9a2:	64 bb       	out	0x14, r22	; 20
 9a4:	08 95       	ret
 9a6:	61 bb       	out	0x11, r22	; 17
 9a8:	08 95       	ret

Disassembly of section .text.DIO_voidSetPortValue:

000009aa <DIO_voidSetPortValue>:
 9aa:	84 30       	cpi	r24, 0x04	; 4
 9ac:	78 f4       	brcc	.+30     	; 0x9cc <DIO_voidSetPortValue+0x22>
 9ae:	81 30       	cpi	r24, 0x01	; 1
 9b0:	41 f0       	breq	.+16     	; 0x9c2 <DIO_voidSetPortValue+0x18>
 9b2:	28 f0       	brcs	.+10     	; 0x9be <DIO_voidSetPortValue+0x14>
 9b4:	82 30       	cpi	r24, 0x02	; 2
 9b6:	39 f0       	breq	.+14     	; 0x9c6 <DIO_voidSetPortValue+0x1c>
 9b8:	83 30       	cpi	r24, 0x03	; 3
 9ba:	39 f0       	breq	.+14     	; 0x9ca <DIO_voidSetPortValue+0x20>
 9bc:	08 95       	ret
 9be:	6b bb       	out	0x1b, r22	; 27
 9c0:	08 95       	ret
 9c2:	68 bb       	out	0x18, r22	; 24
 9c4:	08 95       	ret
 9c6:	65 bb       	out	0x15, r22	; 21
 9c8:	08 95       	ret
 9ca:	62 bb       	out	0x12, r22	; 18
 9cc:	08 95       	ret

Disassembly of section .text.LCD_voidWriteChar8bit:

000007d4 <LCD_voidWriteChar8bit>:
	LCD_voidSendCMD4bit(0x28);
	
	LCD_voidSendCMD4bit(0x0C);
	LCD_voidSendCMD4bit(0x01);
	LCD_voidSendCMD4bit(0x06);
	LCD_voidSendCMD4bit(0x02);
 7d4:	cf 93       	push	r28
 7d6:	c8 2f       	mov	r28, r24
 7d8:	41 e0       	ldi	r20, 0x01	; 1
 7da:	61 e0       	ldi	r22, 0x01	; 1
 7dc:	83 e0       	ldi	r24, 0x03	; 3
 7de:	0e 94 74 03 	call	0x6e8	; 0x6e8 <DIO_voidSetPinValue>
 7e2:	40 e0       	ldi	r20, 0x00	; 0
 7e4:	62 e0       	ldi	r22, 0x02	; 2
 7e6:	83 e0       	ldi	r24, 0x03	; 3
 7e8:	0e 94 74 03 	call	0x6e8	; 0x6e8 <DIO_voidSetPinValue>
 7ec:	41 e0       	ldi	r20, 0x01	; 1
 7ee:	63 e0       	ldi	r22, 0x03	; 3
 7f0:	83 e0       	ldi	r24, 0x03	; 3
 7f2:	0e 94 74 03 	call	0x6e8	; 0x6e8 <DIO_voidSetPinValue>
 7f6:	8f e1       	ldi	r24, 0x1F	; 31
 7f8:	9e e4       	ldi	r25, 0x4E	; 78
 7fa:	01 97       	sbiw	r24, 0x01	; 1
 7fc:	f1 f7       	brne	.-4      	; 0x7fa <LCD_voidWriteChar8bit+0x26>
 7fe:	00 c0       	rjmp	.+0      	; 0x800 <__DATA_REGION_LENGTH__>
 800:	00 00       	nop
 802:	6c 2f       	mov	r22, r28
 804:	82 e0       	ldi	r24, 0x02	; 2
 806:	0e 94 d5 04 	call	0x9aa	; 0x9aa <DIO_voidSetPortValue>
 80a:	40 e0       	ldi	r20, 0x00	; 0
 80c:	63 e0       	ldi	r22, 0x03	; 3
 80e:	83 e0       	ldi	r24, 0x03	; 3
 810:	0e 94 74 03 	call	0x6e8	; 0x6e8 <DIO_voidSetPinValue>
 814:	8f e1       	ldi	r24, 0x1F	; 31
 816:	9e e4       	ldi	r25, 0x4E	; 78
 818:	01 97       	sbiw	r24, 0x01	; 1
 81a:	f1 f7       	brne	.-4      	; 0x818 <__DATA_REGION_LENGTH__+0x18>
 81c:	00 c0       	rjmp	.+0      	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
 81e:	00 00       	nop
 820:	cf 91       	pop	r28
 822:	08 95       	ret

Disassembly of section .text.LCD_voidSendCMD8bit:

00000824 <LCD_voidSendCMD8bit>:
 824:	cf 93       	push	r28
 826:	c8 2f       	mov	r28, r24
 828:	40 e0       	ldi	r20, 0x00	; 0
 82a:	61 e0       	ldi	r22, 0x01	; 1
 82c:	83 e0       	ldi	r24, 0x03	; 3
 82e:	0e 94 74 03 	call	0x6e8	; 0x6e8 <DIO_voidSetPinValue>
 832:	40 e0       	ldi	r20, 0x00	; 0
 834:	62 e0       	ldi	r22, 0x02	; 2
 836:	83 e0       	ldi	r24, 0x03	; 3
 838:	0e 94 74 03 	call	0x6e8	; 0x6e8 <DIO_voidSetPinValue>
 83c:	41 e0       	ldi	r20, 0x01	; 1
 83e:	63 e0       	ldi	r22, 0x03	; 3
 840:	83 e0       	ldi	r24, 0x03	; 3
 842:	0e 94 74 03 	call	0x6e8	; 0x6e8 <DIO_voidSetPinValue>
 846:	8f e1       	ldi	r24, 0x1F	; 31
 848:	9e e4       	ldi	r25, 0x4E	; 78
 84a:	01 97       	sbiw	r24, 0x01	; 1
 84c:	f1 f7       	brne	.-4      	; 0x84a <LCD_voidSendCMD8bit+0x26>
 84e:	00 c0       	rjmp	.+0      	; 0x850 <LCD_voidSendCMD8bit+0x2c>
 850:	00 00       	nop
 852:	6c 2f       	mov	r22, r28
 854:	82 e0       	ldi	r24, 0x02	; 2
 856:	0e 94 d5 04 	call	0x9aa	; 0x9aa <DIO_voidSetPortValue>
 85a:	40 e0       	ldi	r20, 0x00	; 0
 85c:	63 e0       	ldi	r22, 0x03	; 3
 85e:	83 e0       	ldi	r24, 0x03	; 3
 860:	0e 94 74 03 	call	0x6e8	; 0x6e8 <DIO_voidSetPinValue>
 864:	8f e1       	ldi	r24, 0x1F	; 31
 866:	9e e4       	ldi	r25, 0x4E	; 78
 868:	01 97       	sbiw	r24, 0x01	; 1
 86a:	f1 f7       	brne	.-4      	; 0x868 <__stack+0x9>
 86c:	00 c0       	rjmp	.+0      	; 0x86e <__stack+0xf>
 86e:	00 00       	nop
 870:	cf 91       	pop	r28
 872:	08 95       	ret

Disassembly of section .text.LCD_voidInit8bit:

00000874 <LCD_voidInit8bit>:
 874:	2f e7       	ldi	r18, 0x7F	; 127
 876:	85 eb       	ldi	r24, 0xB5	; 181
 878:	91 e0       	ldi	r25, 0x01	; 1
 87a:	21 50       	subi	r18, 0x01	; 1
 87c:	80 40       	sbci	r24, 0x00	; 0
 87e:	90 40       	sbci	r25, 0x00	; 0
 880:	e1 f7       	brne	.-8      	; 0x87a <LCD_voidInit8bit+0x6>
 882:	00 c0       	rjmp	.+0      	; 0x884 <LCD_voidInit8bit+0x10>
 884:	00 00       	nop
 886:	88 e3       	ldi	r24, 0x38	; 56
 888:	0e 94 12 04 	call	0x824	; 0x824 <LCD_voidSendCMD8bit>
 88c:	8f e9       	ldi	r24, 0x9F	; 159
 88e:	9f e0       	ldi	r25, 0x0F	; 15
 890:	01 97       	sbiw	r24, 0x01	; 1
 892:	f1 f7       	brne	.-4      	; 0x890 <LCD_voidInit8bit+0x1c>
 894:	00 c0       	rjmp	.+0      	; 0x896 <LCD_voidInit8bit+0x22>
 896:	00 00       	nop
 898:	8c e0       	ldi	r24, 0x0C	; 12
 89a:	0e 94 12 04 	call	0x824	; 0x824 <LCD_voidSendCMD8bit>
 89e:	8f e9       	ldi	r24, 0x9F	; 159
 8a0:	9f e0       	ldi	r25, 0x0F	; 15
 8a2:	01 97       	sbiw	r24, 0x01	; 1
 8a4:	f1 f7       	brne	.-4      	; 0x8a2 <LCD_voidInit8bit+0x2e>
 8a6:	00 c0       	rjmp	.+0      	; 0x8a8 <LCD_voidInit8bit+0x34>
 8a8:	00 00       	nop
 8aa:	81 e0       	ldi	r24, 0x01	; 1
 8ac:	0e 94 12 04 	call	0x824	; 0x824 <LCD_voidSendCMD8bit>
 8b0:	8f e3       	ldi	r24, 0x3F	; 63
 8b2:	9f e1       	ldi	r25, 0x1F	; 31
 8b4:	01 97       	sbiw	r24, 0x01	; 1
 8b6:	f1 f7       	brne	.-4      	; 0x8b4 <LCD_voidInit8bit+0x40>
 8b8:	00 c0       	rjmp	.+0      	; 0x8ba <LCD_voidInit8bit+0x46>
 8ba:	00 00       	nop
 8bc:	86 e0       	ldi	r24, 0x06	; 6
 8be:	0e 94 12 04 	call	0x824	; 0x824 <LCD_voidSendCMD8bit>
 8c2:	08 95       	ret

Disassembly of section .text.LCD_voidWriteString:

00000912 <LCD_voidWriteString>:
	DIO_voidSetPinValue(LCD_CONTROL_PORT,LCD_EN,LOW);
	_delay_ms(1);
}
// Warning avoid (u8*) ""
void	LCD_voidWriteString(const u8 * string)
{
 912:	cf 92       	push	r12
 914:	df 92       	push	r13
 916:	ef 92       	push	r14
 918:	cf 93       	push	r28
 91a:	6b 01       	movw	r12, r22
 91c:	e8 2e       	mov	r14, r24
	u8 Local_u8Val = 0;
 91e:	c0 e0       	ldi	r28, 0x00	; 0
	while(string[Local_u8Val] != '\0'){
 920:	09 c0       	rjmp	.+18     	; 0x934 <LCD_voidWriteString+0x22>
		switch(LCD_MODE){
			case 4:	LCD_voidWriteChar4bit(string[Local_u8Val]);break;
			case 8: LCD_voidWriteChar8bit(string[Local_u8Val]);break;
 922:	0e 94 ea 03 	call	0x7d4	; 0x7d4 <LCD_voidWriteChar8bit>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 926:	8f e3       	ldi	r24, 0x3F	; 63
 928:	9c e9       	ldi	r25, 0x9C	; 156
 92a:	01 97       	sbiw	r24, 0x01	; 1
 92c:	f1 f7       	brne	.-4      	; 0x92a <LCD_voidWriteString+0x18>
 92e:	00 c0       	rjmp	.+0      	; 0x930 <LCD_voidWriteString+0x1e>
 930:	00 00       	nop
		}
		_delay_ms(10);
		Local_u8Val++;
 932:	cf 5f       	subi	r28, 0xFF	; 255
}
// Warning avoid (u8*) ""
void	LCD_voidWriteString(const u8 * string)
{
	u8 Local_u8Val = 0;
	while(string[Local_u8Val] != '\0'){
 934:	ae 2d       	mov	r26, r14
 936:	c6 01       	movw	r24, r12
 938:	8c 0f       	add	r24, r28
 93a:	91 1d       	adc	r25, r1
 93c:	a1 1d       	adc	r26, r1
 93e:	fc 01       	movw	r30, r24
 940:	84 91       	lpm	r24, Z
 942:	a7 fd       	sbrc	r26, 7
 944:	80 81       	ld	r24, Z
 946:	81 11       	cpse	r24, r1
 948:	ec cf       	rjmp	.-40     	; 0x922 <LCD_voidWriteString+0x10>
		}
		_delay_ms(10);
		Local_u8Val++;
	}
	
}
 94a:	cf 91       	pop	r28
 94c:	ef 90       	pop	r14
 94e:	df 90       	pop	r13
 950:	cf 90       	pop	r12
 952:	08 95       	ret

Disassembly of section .text.LCD_voidLCDClear:

00000a42 <LCD_voidLCDClear>:
	if(LCD_MODE==4)
	{
		LCD_voidSendCMD4bit(0x01);
	}
	else if(LCD_MODE==8){
		LCD_voidSendCMD8bit(0x01);
 a42:	81 e0       	ldi	r24, 0x01	; 1
 a44:	0e 94 12 04 	call	0x824	; 0x824 <LCD_voidSendCMD8bit>
 a48:	08 95       	ret

Disassembly of section .text.LCD_voidGotoXY:

000009ec <LCD_voidGotoXY>:
	}
	
}

void	LCD_voidGotoXY(u8 Line, u8 Col){
	if(Line==0)
 9ec:	81 11       	cpse	r24, r1
 9ee:	05 c0       	rjmp	.+10     	; 0x9fa <LCD_voidGotoXY+0xe>
	{
		switch(LCD_MODE){
			case 4:	LCD_voidSendCMD4bit((0x80+Col));break;
			case 8: LCD_voidSendCMD8bit((0x80+Col));break;
 9f0:	80 e8       	ldi	r24, 0x80	; 128
 9f2:	86 0f       	add	r24, r22
 9f4:	0e 94 12 04 	call	0x824	; 0x824 <LCD_voidSendCMD8bit>
 9f8:	08 95       	ret
		}
	}
	else if(Line==1){
 9fa:	81 30       	cpi	r24, 0x01	; 1
 9fc:	21 f4       	brne	.+8      	; 0xa06 <LCD_voidGotoXY+0x1a>
		switch(LCD_MODE){
			case 4:	LCD_voidSendCMD4bit((0xC0+Col));break;
			case 8: LCD_voidSendCMD8bit((0xC0+Col));break;
 9fe:	80 ec       	ldi	r24, 0xC0	; 192
 a00:	86 0f       	add	r24, r22
 a02:	0e 94 12 04 	call	0x824	; 0x824 <LCD_voidSendCMD8bit>
 a06:	08 95       	ret

Disassembly of section .text.main:

00000102 <main>:
}

int main(void)
{
	//LCD Display
	DIO_voidSetPinDirection(PORTD,PIN1,OUTPUT);
 102:	41 e0       	ldi	r20, 0x01	; 1
 104:	61 e0       	ldi	r22, 0x01	; 1
 106:	83 e0       	ldi	r24, 0x03	; 3
 108:	0e 94 fe 02 	call	0x5fc	; 0x5fc <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(PORTD,PIN2,OUTPUT);
 10c:	41 e0       	ldi	r20, 0x01	; 1
 10e:	62 e0       	ldi	r22, 0x02	; 2
 110:	83 e0       	ldi	r24, 0x03	; 3
 112:	0e 94 fe 02 	call	0x5fc	; 0x5fc <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(PORTD,PIN3,OUTPUT);
 116:	41 e0       	ldi	r20, 0x01	; 1
 118:	63 e0       	ldi	r22, 0x03	; 3
 11a:	83 e0       	ldi	r24, 0x03	; 3
 11c:	0e 94 fe 02 	call	0x5fc	; 0x5fc <DIO_voidSetPinDirection>
	
	//Finger sensors input
	DIO_voidSetPinDirection(PORTA,PIN0,INPUT);   //Thumb
 120:	40 e0       	ldi	r20, 0x00	; 0
 122:	60 e0       	ldi	r22, 0x00	; 0
 124:	80 e0       	ldi	r24, 0x00	; 0
 126:	0e 94 fe 02 	call	0x5fc	; 0x5fc <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(PORTA,PIN1,INPUT);	 //Index
 12a:	40 e0       	ldi	r20, 0x00	; 0
 12c:	61 e0       	ldi	r22, 0x01	; 1
 12e:	80 e0       	ldi	r24, 0x00	; 0
 130:	0e 94 fe 02 	call	0x5fc	; 0x5fc <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(PORTA,PIN2,INPUT);	 //Middle
 134:	40 e0       	ldi	r20, 0x00	; 0
 136:	62 e0       	ldi	r22, 0x02	; 2
 138:	80 e0       	ldi	r24, 0x00	; 0
 13a:	0e 94 fe 02 	call	0x5fc	; 0x5fc <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(PORTA,PIN3,INPUT);	 //Ring
 13e:	40 e0       	ldi	r20, 0x00	; 0
 140:	63 e0       	ldi	r22, 0x03	; 3
 142:	80 e0       	ldi	r24, 0x00	; 0
 144:	0e 94 fe 02 	call	0x5fc	; 0x5fc <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(PORTA,PIN4,INPUT);	 //Pinky
 148:	40 e0       	ldi	r20, 0x00	; 0
 14a:	64 e0       	ldi	r22, 0x04	; 4
 14c:	80 e0       	ldi	r24, 0x00	; 0
 14e:	0e 94 fe 02 	call	0x5fc	; 0x5fc <DIO_voidSetPinDirection>
	
	//ADC Initialization
	ADC_voidInit();
 152:	0e 94 aa 04 	call	0x954	; 0x954 <ADC_voidInit>
	ADC_voidEnable();
 156:	0e 94 1d 05 	call	0xa3a	; 0xa3a <ADC_voidEnable>
	u16 Ring   =0;
	u16 Pinky  =0;
	
	//readValues(Thumb,Index,Middle,Ring,Pinky);
	///*	LCD init	  */
	LCD_voidInit8bit();
 15a:	0e 94 3a 04 	call	0x874	; 0x874 <LCD_voidInit8bit>
	DIO_voidSetPortDirection(PORTC,0xFF);
 15e:	6f ef       	ldi	r22, 0xFF	; 255
 160:	82 e0       	ldi	r24, 0x02	; 2
 162:	0e 94 c3 04 	call	0x986	; 0x986 <DIO_voidSetPortDirection>
	
	while(1)
	{
		ADC_voidSetChannel(PIN0);
 166:	80 e0       	ldi	r24, 0x00	; 0
 168:	0e 94 74 02 	call	0x4e8	; 0x4e8 <ADC_voidSetChannel>
		Thumb = ADC_u16ReadValue();
 16c:	0e 94 0f 05 	call	0xa1e	; 0xa1e <ADC_u16ReadValue>
		Thumb = ((Thumb * 5000UL)/1024);
 170:	9c 01       	movw	r18, r24
 172:	a8 e8       	ldi	r26, 0x88	; 136
 174:	b3 e1       	ldi	r27, 0x13	; 19
 176:	0e 94 e7 04 	call	0x9ce	; 0x9ce <__umulhisi3>
 17a:	dc 01       	movw	r26, r24
 17c:	cb 01       	movw	r24, r22
 17e:	07 2e       	mov	r0, r23
 180:	7a e0       	ldi	r23, 0x0A	; 10
 182:	b6 95       	lsr	r27
 184:	a7 95       	ror	r26
 186:	97 95       	ror	r25
 188:	87 95       	ror	r24
 18a:	7a 95       	dec	r23
 18c:	d1 f7       	brne	.-12     	; 0x182 <main+0x80>
 18e:	70 2d       	mov	r23, r0
 190:	ec 01       	movw	r28, r24
		//Index Channel
		ADC_voidSetChannel(PIN1);
 192:	81 e0       	ldi	r24, 0x01	; 1
 194:	0e 94 74 02 	call	0x4e8	; 0x4e8 <ADC_voidSetChannel>
		Index = ADC_u16ReadValue();
 198:	0e 94 0f 05 	call	0xa1e	; 0xa1e <ADC_u16ReadValue>
		Index = ((Index * 5000UL)/1024);
 19c:	9c 01       	movw	r18, r24
 19e:	a8 e8       	ldi	r26, 0x88	; 136
 1a0:	b3 e1       	ldi	r27, 0x13	; 19
 1a2:	0e 94 e7 04 	call	0x9ce	; 0x9ce <__umulhisi3>
 1a6:	dc 01       	movw	r26, r24
 1a8:	cb 01       	movw	r24, r22
 1aa:	07 2e       	mov	r0, r23
 1ac:	7a e0       	ldi	r23, 0x0A	; 10
 1ae:	b6 95       	lsr	r27
 1b0:	a7 95       	ror	r26
 1b2:	97 95       	ror	r25
 1b4:	87 95       	ror	r24
 1b6:	7a 95       	dec	r23
 1b8:	d1 f7       	brne	.-12     	; 0x1ae <main+0xac>
 1ba:	70 2d       	mov	r23, r0
 1bc:	8c 01       	movw	r16, r24
		//Middle Channel
		ADC_voidSetChannel(PIN2);
 1be:	82 e0       	ldi	r24, 0x02	; 2
 1c0:	0e 94 74 02 	call	0x4e8	; 0x4e8 <ADC_voidSetChannel>
		Middle = ADC_u16ReadValue();
 1c4:	0e 94 0f 05 	call	0xa1e	; 0xa1e <ADC_u16ReadValue>
		Middle = ((Middle * 5000UL)/1024);
 1c8:	9c 01       	movw	r18, r24
 1ca:	a8 e8       	ldi	r26, 0x88	; 136
 1cc:	b3 e1       	ldi	r27, 0x13	; 19
 1ce:	0e 94 e7 04 	call	0x9ce	; 0x9ce <__umulhisi3>
 1d2:	dc 01       	movw	r26, r24
 1d4:	cb 01       	movw	r24, r22
 1d6:	07 2e       	mov	r0, r23
 1d8:	7a e0       	ldi	r23, 0x0A	; 10
 1da:	b6 95       	lsr	r27
 1dc:	a7 95       	ror	r26
 1de:	97 95       	ror	r25
 1e0:	87 95       	ror	r24
 1e2:	7a 95       	dec	r23
 1e4:	d1 f7       	brne	.-12     	; 0x1da <main+0xd8>
 1e6:	70 2d       	mov	r23, r0
 1e8:	7c 01       	movw	r14, r24
		//Ring Channel
		ADC_voidSetChannel(PIN3);
 1ea:	83 e0       	ldi	r24, 0x03	; 3
 1ec:	0e 94 74 02 	call	0x4e8	; 0x4e8 <ADC_voidSetChannel>
		Ring = ADC_u16ReadValue();
 1f0:	0e 94 0f 05 	call	0xa1e	; 0xa1e <ADC_u16ReadValue>
		Ring = ((Ring * 5000UL)/1024);
 1f4:	9c 01       	movw	r18, r24
 1f6:	a8 e8       	ldi	r26, 0x88	; 136
 1f8:	b3 e1       	ldi	r27, 0x13	; 19
 1fa:	0e 94 e7 04 	call	0x9ce	; 0x9ce <__umulhisi3>
 1fe:	dc 01       	movw	r26, r24
 200:	cb 01       	movw	r24, r22
 202:	07 2e       	mov	r0, r23
 204:	7a e0       	ldi	r23, 0x0A	; 10
 206:	b6 95       	lsr	r27
 208:	a7 95       	ror	r26
 20a:	97 95       	ror	r25
 20c:	87 95       	ror	r24
 20e:	7a 95       	dec	r23
 210:	d1 f7       	brne	.-12     	; 0x206 <main+0x104>
 212:	70 2d       	mov	r23, r0
 214:	6c 01       	movw	r12, r24
		//Pinky Channel
		ADC_voidSetChannel(PIN4);
 216:	84 e0       	ldi	r24, 0x04	; 4
 218:	0e 94 74 02 	call	0x4e8	; 0x4e8 <ADC_voidSetChannel>
		Pinky = ADC_u16ReadValue();
 21c:	0e 94 0f 05 	call	0xa1e	; 0xa1e <ADC_u16ReadValue>
		Pinky = ((Pinky * 5000UL)/1024);
 220:	9c 01       	movw	r18, r24
 222:	a8 e8       	ldi	r26, 0x88	; 136
 224:	b3 e1       	ldi	r27, 0x13	; 19
 226:	0e 94 e7 04 	call	0x9ce	; 0x9ce <__umulhisi3>
 22a:	dc 01       	movw	r26, r24
 22c:	cb 01       	movw	r24, r22
 22e:	07 2e       	mov	r0, r23
 230:	7a e0       	ldi	r23, 0x0A	; 10
 232:	b6 95       	lsr	r27
 234:	a7 95       	ror	r26
 236:	97 95       	ror	r25
 238:	87 95       	ror	r24
 23a:	7a 95       	dec	r23
 23c:	d1 f7       	brne	.-12     	; 0x232 <main+0x130>
 23e:	70 2d       	mov	r23, r0
 240:	bc 01       	movw	r22, r24
		if(Thumb>2500 && Index>2500 && Middle>2500 && Ring>2500 && Pinky>2500 )
 242:	c5 3c       	cpi	r28, 0xC5	; 197
 244:	29 e0       	ldi	r18, 0x09	; 9
 246:	d2 07       	cpc	r29, r18
 248:	68 f1       	brcs	.+90     	; 0x2a4 <main+0x1a2>
 24a:	05 3c       	cpi	r16, 0xC5	; 197
 24c:	89 e0       	ldi	r24, 0x09	; 9
 24e:	18 07       	cpc	r17, r24
 250:	48 f1       	brcs	.+82     	; 0x2a4 <main+0x1a2>
 252:	95 ec       	ldi	r25, 0xC5	; 197
 254:	e9 16       	cp	r14, r25
 256:	99 e0       	ldi	r25, 0x09	; 9
 258:	f9 06       	cpc	r15, r25
 25a:	20 f1       	brcs	.+72     	; 0x2a4 <main+0x1a2>
 25c:	25 ec       	ldi	r18, 0xC5	; 197
 25e:	c2 16       	cp	r12, r18
 260:	29 e0       	ldi	r18, 0x09	; 9
 262:	d2 06       	cpc	r13, r18
 264:	f8 f0       	brcs	.+62     	; 0x2a4 <main+0x1a2>
 266:	65 3c       	cpi	r22, 0xC5	; 197
 268:	89 e0       	ldi	r24, 0x09	; 9
 26a:	78 07       	cpc	r23, r24
 26c:	d8 f0       	brcs	.+54     	; 0x2a4 <main+0x1a2>
		{
			LCD_voidGotoXY(0,0);
 26e:	60 e0       	ldi	r22, 0x00	; 0
 270:	80 e0       	ldi	r24, 0x00	; 0
 272:	0e 94 f6 04 	call	0x9ec	; 0x9ec <LCD_voidGotoXY>
			LCD_voidLCDClear();
 276:	0e 94 21 05 	call	0xa42	; 0xa42 <LCD_voidLCDClear>
 27a:	8f e3       	ldi	r24, 0x3F	; 63
 27c:	9c e9       	ldi	r25, 0x9C	; 156
 27e:	01 97       	sbiw	r24, 0x01	; 1
 280:	f1 f7       	brne	.-4      	; 0x27e <main+0x17c>
 282:	00 c0       	rjmp	.+0      	; 0x284 <main+0x182>
 284:	00 00       	nop
			_delay_ms(10);
			LCD_voidWriteString("Good Luck");
 286:	6e eb       	ldi	r22, 0xBE	; 190
 288:	70 e0       	ldi	r23, 0x00	; 0
 28a:	80 e0       	ldi	r24, 0x00	; 0
 28c:	0e 94 89 04 	call	0x912	; 0x912 <LCD_voidWriteString>
 290:	9f ef       	ldi	r25, 0xFF	; 255
 292:	21 ee       	ldi	r18, 0xE1	; 225
 294:	84 e0       	ldi	r24, 0x04	; 4
 296:	91 50       	subi	r25, 0x01	; 1
 298:	20 40       	sbci	r18, 0x00	; 0
 29a:	80 40       	sbci	r24, 0x00	; 0
 29c:	e1 f7       	brne	.-8      	; 0x296 <main+0x194>
 29e:	00 c0       	rjmp	.+0      	; 0x2a0 <main+0x19e>
 2a0:	00 00       	nop
 2a2:	61 cf       	rjmp	.-318    	; 0x166 <main+0x64>
			_delay_ms(100);
		}
		else if(Thumb>2500 && Index<=2500 && Middle<=2500 && Ring<=2500 && Pinky<=2500 ){
 2a4:	c5 3c       	cpi	r28, 0xC5	; 197
 2a6:	99 e0       	ldi	r25, 0x09	; 9
 2a8:	d9 07       	cpc	r29, r25
 2aa:	58 f1       	brcs	.+86     	; 0x302 <main+0x200>
 2ac:	05 3c       	cpi	r16, 0xC5	; 197
 2ae:	29 e0       	ldi	r18, 0x09	; 9
 2b0:	12 07       	cpc	r17, r18
 2b2:	38 f5       	brcc	.+78     	; 0x302 <main+0x200>
 2b4:	85 ec       	ldi	r24, 0xC5	; 197
 2b6:	e8 16       	cp	r14, r24
 2b8:	89 e0       	ldi	r24, 0x09	; 9
 2ba:	f8 06       	cpc	r15, r24
 2bc:	10 f5       	brcc	.+68     	; 0x302 <main+0x200>
 2be:	95 ec       	ldi	r25, 0xC5	; 197
 2c0:	c9 16       	cp	r12, r25
 2c2:	99 e0       	ldi	r25, 0x09	; 9
 2c4:	d9 06       	cpc	r13, r25
 2c6:	e8 f4       	brcc	.+58     	; 0x302 <main+0x200>
 2c8:	65 3c       	cpi	r22, 0xC5	; 197
 2ca:	29 e0       	ldi	r18, 0x09	; 9
 2cc:	72 07       	cpc	r23, r18
 2ce:	c8 f4       	brcc	.+50     	; 0x302 <main+0x200>
			//Thumb Straight
			LCD_voidGotoXY(0,0);
 2d0:	60 e0       	ldi	r22, 0x00	; 0
 2d2:	80 e0       	ldi	r24, 0x00	; 0
 2d4:	0e 94 f6 04 	call	0x9ec	; 0x9ec <LCD_voidGotoXY>
			LCD_voidLCDClear();
 2d8:	0e 94 21 05 	call	0xa42	; 0xa42 <LCD_voidLCDClear>
			LCD_voidWriteString("Good Job");
 2dc:	68 ec       	ldi	r22, 0xC8	; 200
 2de:	70 e0       	ldi	r23, 0x00	; 0
 2e0:	80 e0       	ldi	r24, 0x00	; 0
 2e2:	0e 94 89 04 	call	0x912	; 0x912 <LCD_voidWriteString>
			LCD_voidGotoXY(1,1);
 2e6:	61 e0       	ldi	r22, 0x01	; 1
 2e8:	81 e0       	ldi	r24, 0x01	; 1
 2ea:	0e 94 f6 04 	call	0x9ec	; 0x9ec <LCD_voidGotoXY>
 2ee:	8f ef       	ldi	r24, 0xFF	; 255
 2f0:	91 ee       	ldi	r25, 0xE1	; 225
 2f2:	24 e0       	ldi	r18, 0x04	; 4
 2f4:	81 50       	subi	r24, 0x01	; 1
 2f6:	90 40       	sbci	r25, 0x00	; 0
 2f8:	20 40       	sbci	r18, 0x00	; 0
 2fa:	e1 f7       	brne	.-8      	; 0x2f4 <main+0x1f2>
 2fc:	00 c0       	rjmp	.+0      	; 0x2fe <main+0x1fc>
 2fe:	00 00       	nop
 300:	32 cf       	rjmp	.-412    	; 0x166 <main+0x64>
			_delay_ms(100);
		}
		else if(Thumb<=2500 && Index>2500 && Middle<=2500 && Ring<=2500 && Pinky>2500 )
 302:	c5 3c       	cpi	r28, 0xC5	; 197
 304:	89 e0       	ldi	r24, 0x09	; 9
 306:	d8 07       	cpc	r29, r24
 308:	68 f5       	brcc	.+90     	; 0x364 <main+0x262>
 30a:	05 3c       	cpi	r16, 0xC5	; 197
 30c:	99 e0       	ldi	r25, 0x09	; 9
 30e:	19 07       	cpc	r17, r25
 310:	48 f1       	brcs	.+82     	; 0x364 <main+0x262>
 312:	25 ec       	ldi	r18, 0xC5	; 197
 314:	e2 16       	cp	r14, r18
 316:	29 e0       	ldi	r18, 0x09	; 9
 318:	f2 06       	cpc	r15, r18
 31a:	20 f5       	brcc	.+72     	; 0x364 <main+0x262>
 31c:	85 ec       	ldi	r24, 0xC5	; 197
 31e:	c8 16       	cp	r12, r24
 320:	89 e0       	ldi	r24, 0x09	; 9
 322:	d8 06       	cpc	r13, r24
 324:	f8 f4       	brcc	.+62     	; 0x364 <main+0x262>
 326:	65 3c       	cpi	r22, 0xC5	; 197
 328:	99 e0       	ldi	r25, 0x09	; 9
 32a:	79 07       	cpc	r23, r25
 32c:	d8 f0       	brcs	.+54     	; 0x364 <main+0x262>
		{
			// Index and Pinky Straight
			LCD_voidGotoXY(0,0);
 32e:	60 e0       	ldi	r22, 0x00	; 0
 330:	80 e0       	ldi	r24, 0x00	; 0
 332:	0e 94 f6 04 	call	0x9ec	; 0x9ec <LCD_voidGotoXY>
			LCD_voidLCDClear();
 336:	0e 94 21 05 	call	0xa42	; 0xa42 <LCD_voidLCDClear>
 33a:	8f e3       	ldi	r24, 0x3F	; 63
 33c:	9c e9       	ldi	r25, 0x9C	; 156
 33e:	01 97       	sbiw	r24, 0x01	; 1
 340:	f1 f7       	brne	.-4      	; 0x33e <main+0x23c>
 342:	00 c0       	rjmp	.+0      	; 0x344 <main+0x242>
 344:	00 00       	nop
			_delay_ms(10);
			LCD_voidWriteString("Awesome");
 346:	61 ed       	ldi	r22, 0xD1	; 209
 348:	70 e0       	ldi	r23, 0x00	; 0
 34a:	80 e0       	ldi	r24, 0x00	; 0
 34c:	0e 94 89 04 	call	0x912	; 0x912 <LCD_voidWriteString>
 350:	9f ef       	ldi	r25, 0xFF	; 255
 352:	21 ee       	ldi	r18, 0xE1	; 225
 354:	84 e0       	ldi	r24, 0x04	; 4
 356:	91 50       	subi	r25, 0x01	; 1
 358:	20 40       	sbci	r18, 0x00	; 0
 35a:	80 40       	sbci	r24, 0x00	; 0
 35c:	e1 f7       	brne	.-8      	; 0x356 <main+0x254>
 35e:	00 c0       	rjmp	.+0      	; 0x360 <main+0x25e>
 360:	00 00       	nop
 362:	01 cf       	rjmp	.-510    	; 0x166 <main+0x64>
			_delay_ms(100);
		}
		else if(Thumb>2500 && Index>2500 && Middle<=2500 && Ring<=2500 && Pinky>2500 )
 364:	c5 3c       	cpi	r28, 0xC5	; 197
 366:	99 e0       	ldi	r25, 0x09	; 9
 368:	d9 07       	cpc	r29, r25
 36a:	68 f1       	brcs	.+90     	; 0x3c6 <main+0x2c4>
 36c:	05 3c       	cpi	r16, 0xC5	; 197
 36e:	29 e0       	ldi	r18, 0x09	; 9
 370:	12 07       	cpc	r17, r18
 372:	48 f1       	brcs	.+82     	; 0x3c6 <main+0x2c4>
 374:	85 ec       	ldi	r24, 0xC5	; 197
 376:	e8 16       	cp	r14, r24
 378:	89 e0       	ldi	r24, 0x09	; 9
 37a:	f8 06       	cpc	r15, r24
 37c:	20 f5       	brcc	.+72     	; 0x3c6 <main+0x2c4>
 37e:	95 ec       	ldi	r25, 0xC5	; 197
 380:	c9 16       	cp	r12, r25
 382:	99 e0       	ldi	r25, 0x09	; 9
 384:	d9 06       	cpc	r13, r25
 386:	f8 f4       	brcc	.+62     	; 0x3c6 <main+0x2c4>
 388:	65 3c       	cpi	r22, 0xC5	; 197
 38a:	29 e0       	ldi	r18, 0x09	; 9
 38c:	72 07       	cpc	r23, r18
 38e:	d8 f0       	brcs	.+54     	; 0x3c6 <main+0x2c4>
		{
			// Thumb,Index and Pinky Straight
			LCD_voidGotoXY(0,0);
 390:	60 e0       	ldi	r22, 0x00	; 0
 392:	80 e0       	ldi	r24, 0x00	; 0
 394:	0e 94 f6 04 	call	0x9ec	; 0x9ec <LCD_voidGotoXY>
			LCD_voidLCDClear();
 398:	0e 94 21 05 	call	0xa42	; 0xa42 <LCD_voidLCDClear>
 39c:	8f e3       	ldi	r24, 0x3F	; 63
 39e:	9c e9       	ldi	r25, 0x9C	; 156
 3a0:	01 97       	sbiw	r24, 0x01	; 1
 3a2:	f1 f7       	brne	.-4      	; 0x3a0 <main+0x29e>
 3a4:	00 c0       	rjmp	.+0      	; 0x3a6 <main+0x2a4>
 3a6:	00 00       	nop
			_delay_ms(10);
			LCD_voidWriteString("I love you");
 3a8:	69 ed       	ldi	r22, 0xD9	; 217
 3aa:	70 e0       	ldi	r23, 0x00	; 0
 3ac:	80 e0       	ldi	r24, 0x00	; 0
 3ae:	0e 94 89 04 	call	0x912	; 0x912 <LCD_voidWriteString>
 3b2:	9f ef       	ldi	r25, 0xFF	; 255
 3b4:	21 ee       	ldi	r18, 0xE1	; 225
 3b6:	84 e0       	ldi	r24, 0x04	; 4
 3b8:	91 50       	subi	r25, 0x01	; 1
 3ba:	20 40       	sbci	r18, 0x00	; 0
 3bc:	80 40       	sbci	r24, 0x00	; 0
 3be:	e1 f7       	brne	.-8      	; 0x3b8 <main+0x2b6>
 3c0:	00 c0       	rjmp	.+0      	; 0x3c2 <main+0x2c0>
 3c2:	00 00       	nop
 3c4:	d0 ce       	rjmp	.-608    	; 0x166 <main+0x64>
			_delay_ms(100);
		}
		else if(Thumb>2500 && Index>2500 && Middle>2500 && Ring<=2500 && Pinky>2500 )
 3c6:	c5 3c       	cpi	r28, 0xC5	; 197
 3c8:	99 e0       	ldi	r25, 0x09	; 9
 3ca:	d9 07       	cpc	r29, r25
 3cc:	68 f1       	brcs	.+90     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 3ce:	05 3c       	cpi	r16, 0xC5	; 197
 3d0:	29 e0       	ldi	r18, 0x09	; 9
 3d2:	12 07       	cpc	r17, r18
 3d4:	48 f1       	brcs	.+82     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 3d6:	85 ec       	ldi	r24, 0xC5	; 197
 3d8:	e8 16       	cp	r14, r24
 3da:	89 e0       	ldi	r24, 0x09	; 9
 3dc:	f8 06       	cpc	r15, r24
 3de:	20 f1       	brcs	.+72     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 3e0:	95 ec       	ldi	r25, 0xC5	; 197
 3e2:	c9 16       	cp	r12, r25
 3e4:	99 e0       	ldi	r25, 0x09	; 9
 3e6:	d9 06       	cpc	r13, r25
 3e8:	f8 f4       	brcc	.+62     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 3ea:	65 3c       	cpi	r22, 0xC5	; 197
 3ec:	29 e0       	ldi	r18, 0x09	; 9
 3ee:	72 07       	cpc	r23, r18
 3f0:	d8 f0       	brcs	.+54     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
		{
			// Thumb,Index,middle and Pinky Straight
			LCD_voidGotoXY(0,0);
 3f2:	60 e0       	ldi	r22, 0x00	; 0
 3f4:	80 e0       	ldi	r24, 0x00	; 0
 3f6:	0e 94 f6 04 	call	0x9ec	; 0x9ec <LCD_voidGotoXY>
			LCD_voidLCDClear();
 3fa:	0e 94 21 05 	call	0xa42	; 0xa42 <LCD_voidLCDClear>
 3fe:	8f e3       	ldi	r24, 0x3F	; 63
 400:	9c e9       	ldi	r25, 0x9C	; 156
 402:	01 97       	sbiw	r24, 0x01	; 1
 404:	f1 f7       	brne	.-4      	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
 406:	00 c0       	rjmp	.+0      	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
 408:	00 00       	nop
			_delay_ms(10);
			LCD_voidWriteString("I love you alot");
 40a:	64 ee       	ldi	r22, 0xE4	; 228
 40c:	70 e0       	ldi	r23, 0x00	; 0
 40e:	80 e0       	ldi	r24, 0x00	; 0
 410:	0e 94 89 04 	call	0x912	; 0x912 <LCD_voidWriteString>
 414:	9f ef       	ldi	r25, 0xFF	; 255
 416:	21 ee       	ldi	r18, 0xE1	; 225
 418:	84 e0       	ldi	r24, 0x04	; 4
 41a:	91 50       	subi	r25, 0x01	; 1
 41c:	20 40       	sbci	r18, 0x00	; 0
 41e:	80 40       	sbci	r24, 0x00	; 0
 420:	e1 f7       	brne	.-8      	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
 422:	00 c0       	rjmp	.+0      	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
 424:	00 00       	nop
 426:	9f ce       	rjmp	.-706    	; 0x166 <main+0x64>
			_delay_ms(100);
		}
		else if(Thumb<=2500 && Index>2500 && Middle>2500 && Ring<=2500 && Pinky<=2500 ){
 428:	c5 3c       	cpi	r28, 0xC5	; 197
 42a:	99 e0       	ldi	r25, 0x09	; 9
 42c:	d9 07       	cpc	r29, r25
 42e:	58 f5       	brcc	.+86     	; 0x486 <__EEPROM_REGION_LENGTH__+0x86>
 430:	05 3c       	cpi	r16, 0xC5	; 197
 432:	29 e0       	ldi	r18, 0x09	; 9
 434:	12 07       	cpc	r17, r18
 436:	38 f1       	brcs	.+78     	; 0x486 <__EEPROM_REGION_LENGTH__+0x86>
 438:	85 ec       	ldi	r24, 0xC5	; 197
 43a:	e8 16       	cp	r14, r24
 43c:	89 e0       	ldi	r24, 0x09	; 9
 43e:	f8 06       	cpc	r15, r24
 440:	10 f1       	brcs	.+68     	; 0x486 <__EEPROM_REGION_LENGTH__+0x86>
 442:	95 ec       	ldi	r25, 0xC5	; 197
 444:	c9 16       	cp	r12, r25
 446:	99 e0       	ldi	r25, 0x09	; 9
 448:	d9 06       	cpc	r13, r25
 44a:	e8 f4       	brcc	.+58     	; 0x486 <__EEPROM_REGION_LENGTH__+0x86>
 44c:	65 3c       	cpi	r22, 0xC5	; 197
 44e:	29 e0       	ldi	r18, 0x09	; 9
 450:	72 07       	cpc	r23, r18
 452:	c8 f4       	brcc	.+50     	; 0x486 <__EEPROM_REGION_LENGTH__+0x86>
			//Thumb Straight
			LCD_voidGotoXY(0,0);
 454:	60 e0       	ldi	r22, 0x00	; 0
 456:	80 e0       	ldi	r24, 0x00	; 0
 458:	0e 94 f6 04 	call	0x9ec	; 0x9ec <LCD_voidGotoXY>
			LCD_voidLCDClear();
 45c:	0e 94 21 05 	call	0xa42	; 0xa42 <LCD_voidLCDClear>
			LCD_voidWriteString("I see you");
 460:	64 ef       	ldi	r22, 0xF4	; 244
 462:	70 e0       	ldi	r23, 0x00	; 0
 464:	80 e0       	ldi	r24, 0x00	; 0
 466:	0e 94 89 04 	call	0x912	; 0x912 <LCD_voidWriteString>
			LCD_voidGotoXY(1,1);
 46a:	61 e0       	ldi	r22, 0x01	; 1
 46c:	81 e0       	ldi	r24, 0x01	; 1
 46e:	0e 94 f6 04 	call	0x9ec	; 0x9ec <LCD_voidGotoXY>
 472:	8f ef       	ldi	r24, 0xFF	; 255
 474:	91 ee       	ldi	r25, 0xE1	; 225
 476:	24 e0       	ldi	r18, 0x04	; 4
 478:	81 50       	subi	r24, 0x01	; 1
 47a:	90 40       	sbci	r25, 0x00	; 0
 47c:	20 40       	sbci	r18, 0x00	; 0
 47e:	e1 f7       	brne	.-8      	; 0x478 <__EEPROM_REGION_LENGTH__+0x78>
 480:	00 c0       	rjmp	.+0      	; 0x482 <__EEPROM_REGION_LENGTH__+0x82>
 482:	00 00       	nop
 484:	70 ce       	rjmp	.-800    	; 0x166 <main+0x64>
			_delay_ms(100);
		}
		else if(Thumb<=2500 && Index>2500 && Middle<=2500 && Ring<=2500 && Pinky<=2500 ){
 486:	c5 3c       	cpi	r28, 0xC5	; 197
 488:	d9 40       	sbci	r29, 0x09	; 9
 48a:	08 f0       	brcs	.+2      	; 0x48e <__EEPROM_REGION_LENGTH__+0x8e>
 48c:	6c ce       	rjmp	.-808    	; 0x166 <main+0x64>
 48e:	05 3c       	cpi	r16, 0xC5	; 197
 490:	19 40       	sbci	r17, 0x09	; 9
 492:	08 f4       	brcc	.+2      	; 0x496 <__EEPROM_REGION_LENGTH__+0x96>
 494:	68 ce       	rjmp	.-816    	; 0x166 <main+0x64>
 496:	25 ec       	ldi	r18, 0xC5	; 197
 498:	e2 16       	cp	r14, r18
 49a:	29 e0       	ldi	r18, 0x09	; 9
 49c:	f2 06       	cpc	r15, r18
 49e:	08 f0       	brcs	.+2      	; 0x4a2 <__EEPROM_REGION_LENGTH__+0xa2>
 4a0:	62 ce       	rjmp	.-828    	; 0x166 <main+0x64>
 4a2:	85 ec       	ldi	r24, 0xC5	; 197
 4a4:	c8 16       	cp	r12, r24
 4a6:	89 e0       	ldi	r24, 0x09	; 9
 4a8:	d8 06       	cpc	r13, r24
 4aa:	08 f0       	brcs	.+2      	; 0x4ae <__EEPROM_REGION_LENGTH__+0xae>
 4ac:	5c ce       	rjmp	.-840    	; 0x166 <main+0x64>
 4ae:	65 3c       	cpi	r22, 0xC5	; 197
 4b0:	79 40       	sbci	r23, 0x09	; 9
 4b2:	08 f0       	brcs	.+2      	; 0x4b6 <__EEPROM_REGION_LENGTH__+0xb6>
 4b4:	58 ce       	rjmp	.-848    	; 0x166 <main+0x64>
			//Thumb Straight
			LCD_voidGotoXY(0,0);
 4b6:	60 e0       	ldi	r22, 0x00	; 0
 4b8:	80 e0       	ldi	r24, 0x00	; 0
 4ba:	0e 94 f6 04 	call	0x9ec	; 0x9ec <LCD_voidGotoXY>
			LCD_voidLCDClear();
 4be:	0e 94 21 05 	call	0xa42	; 0xa42 <LCD_voidLCDClear>
			LCD_voidWriteString("You");
 4c2:	6e ef       	ldi	r22, 0xFE	; 254
 4c4:	70 e0       	ldi	r23, 0x00	; 0
 4c6:	80 e0       	ldi	r24, 0x00	; 0
 4c8:	0e 94 89 04 	call	0x912	; 0x912 <LCD_voidWriteString>
			LCD_voidGotoXY(1,1);
 4cc:	61 e0       	ldi	r22, 0x01	; 1
 4ce:	81 e0       	ldi	r24, 0x01	; 1
 4d0:	0e 94 f6 04 	call	0x9ec	; 0x9ec <LCD_voidGotoXY>
 4d4:	2f ef       	ldi	r18, 0xFF	; 255
 4d6:	81 ee       	ldi	r24, 0xE1	; 225
 4d8:	94 e0       	ldi	r25, 0x04	; 4
 4da:	21 50       	subi	r18, 0x01	; 1
 4dc:	80 40       	sbci	r24, 0x00	; 0
 4de:	90 40       	sbci	r25, 0x00	; 0
 4e0:	e1 f7       	brne	.-8      	; 0x4da <__EEPROM_REGION_LENGTH__+0xda>
 4e2:	00 c0       	rjmp	.+0      	; 0x4e4 <__EEPROM_REGION_LENGTH__+0xe4>
 4e4:	00 00       	nop
 4e6:	3f ce       	rjmp	.-898    	; 0x166 <main+0x64>

Disassembly of section .text.libgcc:

00000a2e <__tablejump2__>:
 a2e:	ee 0f       	add	r30, r30
 a30:	ff 1f       	adc	r31, r31
 a32:	05 90       	lpm	r0, Z+
 a34:	f4 91       	lpm	r31, Z
 a36:	e0 2d       	mov	r30, r0
 a38:	09 94       	ijmp

Disassembly of section .text.libgcc.mul:

000009ce <__umulhisi3>:
 9ce:	a2 9f       	mul	r26, r18
 9d0:	b0 01       	movw	r22, r0
 9d2:	b3 9f       	mul	r27, r19
 9d4:	c0 01       	movw	r24, r0
 9d6:	a3 9f       	mul	r26, r19
 9d8:	70 0d       	add	r23, r0
 9da:	81 1d       	adc	r24, r1
 9dc:	11 24       	eor	r1, r1
 9de:	91 1d       	adc	r25, r1
 9e0:	b2 9f       	mul	r27, r18
 9e2:	70 0d       	add	r23, r0
 9e4:	81 1d       	adc	r24, r1
 9e6:	11 24       	eor	r1, r1
 9e8:	91 1d       	adc	r25, r1
 9ea:	08 95       	ret

Disassembly of section .text.__dummy_fini:

00000a52 <_fini>:
 a52:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

00000a54 <__funcs_on_exit>:
 a54:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00000a56 <__simulator_exit>:
 a56:	08 95       	ret

Disassembly of section .text.exit:

00000a08 <exit>:
 a08:	ec 01       	movw	r28, r24
 a0a:	0e 94 2a 05 	call	0xa54	; 0xa54 <__funcs_on_exit>
 a0e:	0e 94 29 05 	call	0xa52	; 0xa52 <_fini>
 a12:	ce 01       	movw	r24, r28
 a14:	0e 94 2b 05 	call	0xa56	; 0xa56 <__simulator_exit>
 a18:	ce 01       	movw	r24, r28
 a1a:	0e 94 27 05 	call	0xa4e	; 0xa4e <_Exit>

Disassembly of section .text._Exit:

00000a4e <_Exit>:
 a4e:	0e 94 5d 00 	call	0xba	; 0xba <_exit>
